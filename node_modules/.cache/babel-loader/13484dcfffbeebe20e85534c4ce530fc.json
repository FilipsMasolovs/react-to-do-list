{"ast":null,"code":"var _jsxFileName = \"/Users/Konutis/Desktop/Filips/newStart/react-to-do/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    let data = window.localStorage.toDoData;\n\n    if (data) {\n      data = JSON.parse(data);\n    } else {\n      data = {\n        toDoTasks: [],\n        completedTasks: []\n      };\n      window.localStorage.setItem('toDoData', JSON.stringify(data));\n    }\n\n    this.state = {\n      inputValue: '',\n      toDoTasks: data.toDoTasks,\n      completedTasks: data.completedTasks\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n    this.keyPressed = this.keyPressed.bind(this);\n  }\n\n  updateLocalStorage() {\n    let data = {\n      toDoTasks: this.state.toDoTasks,\n      completedTasks: this.state.completedTasks\n    };\n    window.localStorage.setItem('toDoData', JSON.stringify(data));\n  }\n\n  keyPressed(event) {\n    if (event.key === \"Enter\") {\n      this.handleAddClick();\n    }\n  }\n\n  handleAddClick() {\n    if (this.state.inputValue) {\n      let id = Date.now();\n      let newItem = {\n        id: id.toString(),\n        value: this.state.inputValue\n      };\n      let newToDoTasks = this.state.toDoTasks;\n      newToDoTasks.unshift(newItem);\n      this.setState({\n        inputValue: '',\n        toDoTasks: newToDoTasks\n      });\n    }\n\n    this.updateLocalStorage();\n  }\n\n  handleDeleteClick(event) {\n    let id = event.currentTarget.closest('.task').id;\n    let checked = event.currentTarget.closest('.task').querySelector('.checkbox').checked;\n\n    if (checked) {\n      let newToDoTasks = this.state.completedTasks;\n      let index = newToDoTasks.findIndex(item => item.id === id);\n      newToDoTasks.splice(index, 1);\n      this.setState({\n        completedTasks: newToDoTasks\n      });\n    } else {\n      let newToDoTasks = this.state.toDoTasks;\n      let index = newToDoTasks.findIndex(item => item.id === id);\n      newToDoTasks.splice(index, 1);\n      this.setState({\n        toDoTasks: newToDoTasks\n      });\n    }\n\n    this.updateLocalStorage();\n  }\n\n  handleCheckboxClick(event) {\n    let id = event.currentTarget.closest('.task').id;\n    let checked = event.currentTarget.closest('.task').querySelector('.checkbox').checked;\n    let arrayToAdd = this.state.completedTasks;\n    let arrayToDelete = this.state.toDoTasks;\n\n    if (checked) {\n      let index = arrayToDelete.findIndex(item => item.id === id);\n      arrayToAdd.unshift(arrayToDelete[index]);\n      arrayToDelete.splice(index, 1);\n      this.setState({\n        toDoTasks: arrayToDelete,\n        completedTasks: arrayToAdd\n      });\n    } else {// let newCompletedTasks = this.state.completedTasks\n      // let index = newCompletedTasks.findIndex(item => item.id === id);\n      // let newToDoTasks = this.state.toDoTasks\n      // newToDoTasks.unshift(newCompletedTasks[index])\n      // newCompletedTasks.splice(index, 1);\n      // this.setState({\n      //     toDoTasks: newToDoTasks,\n      //     completedTasks: newCompletedTasks\n      // })\n    }\n\n    this.updateLocalStorage();\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      inputValue: event.currentTarget.value\n    });\n  }\n\n  getToDoItems() {\n    let items = [];\n    this.state.toDoTasks.forEach(item => {\n      let key = \"to-do-item-\".concat(item.id);\n      let html = React.createElement(\"div\", {\n        className: \"task\",\n        id: item.id,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        onChange: this.handleCheckboxClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), item.value), React.createElement(\"div\", {\n        className: \"task-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"delete-button\",\n        onClick: this.handleDeleteClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Delete\")));\n      items.push(html);\n    });\n    return items;\n  }\n\n  getCompletedItems() {\n    let items = [];\n    this.state.completedTasks.forEach(item => {\n      let key = \"completed-item-\".concat(item.id);\n      let html = React.createElement(\"div\", {\n        className: \"task\",\n        id: item.id,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        checked: true,\n        onChange: this.handleCheckboxClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), item.value), React.createElement(\"div\", {\n        className: \"task-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"delete-button\",\n        onClick: this.handleDeleteClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Delete\")));\n      items.push(html);\n    });\n    return items;\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"ADD ITEM\"), React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.inputValue,\n      type: \"text\",\n      className: \"input-task\",\n      onChange: this.handleInputChange,\n      onKeyPress: this.keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"add-task\",\n      onClick: this.handleAddClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"TODO\"), React.createElement(\"div\", {\n      className: \"open-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.getToDoItems())), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"COMPLETED\"), React.createElement(\"div\", {\n      className: \"completed-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.getCompletedItems())));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/Konutis/Desktop/Filips/newStart/react-to-do/src/App.js"],"names":["React","App","Component","constructor","props","data","window","localStorage","toDoData","JSON","parse","toDoTasks","completedTasks","setItem","stringify","state","inputValue","handleInputChange","bind","handleAddClick","handleDeleteClick","handleCheckboxClick","keyPressed","updateLocalStorage","event","key","id","Date","now","newItem","toString","value","newToDoTasks","unshift","setState","currentTarget","closest","checked","querySelector","index","findIndex","item","splice","arrayToAdd","arrayToDelete","getToDoItems","items","forEach","html","push","getCompletedItems","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nexport default class App extends React.Component {\n    constructor (props) {\n        super(props)\n\n        let data = window.localStorage.toDoData\n\n        if (data) {\n            data = JSON.parse(data)\n        } else {\n            data = { toDoTasks: [], completedTasks: [] }\n            window.localStorage.setItem('toDoData', JSON.stringify(data))\n        }\n    \n        this.state = {\n            inputValue: '',\n            toDoTasks: data.toDoTasks,\n            completedTasks: data.completedTasks\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleAddClick = this.handleAddClick.bind(this)\n        this.handleDeleteClick = this.handleDeleteClick.bind(this)\n        this.handleCheckboxClick = this.handleCheckboxClick.bind(this)\n        this.keyPressed = this.keyPressed.bind(this)\n    }\n\n    updateLocalStorage () {\n        let data = {\n            toDoTasks: this.state.toDoTasks,\n            completedTasks: this.state.completedTasks\n        }\n        window.localStorage.setItem('toDoData', JSON.stringify(data))\n    }\n\n    keyPressed(event) {\n        if (event.key === \"Enter\") {\n          this.handleAddClick()\n        }\n    }\n    \n    handleAddClick () {\n        if (this.state.inputValue) {\n            let id = Date.now()\n            let newItem = { id: id.toString(), value: this.state.inputValue }\n            let newToDoTasks = this.state.toDoTasks\n            newToDoTasks.unshift(newItem)\n            this.setState({\n                inputValue: '',\n                toDoTasks: newToDoTasks\n            })\n        }\n\n        this.updateLocalStorage()\n    }\n\n    handleDeleteClick (event) {\n        let id = event.currentTarget.closest('.task').id\n        let checked = event.currentTarget.closest('.task').querySelector('.checkbox').checked;\n\n        if (checked) {\n            let newToDoTasks = this.state.completedTasks\n            let index = newToDoTasks.findIndex(item => item.id === id);\n            newToDoTasks.splice(index, 1);\n\n            this.setState({\n                completedTasks: newToDoTasks\n            })\n        } else {\n            let newToDoTasks = this.state.toDoTasks\n            let index = newToDoTasks.findIndex(item => item.id === id);\n            newToDoTasks.splice(index, 1);\n\n            this.setState({\n                toDoTasks: newToDoTasks\n            })\n        }\n\n        this.updateLocalStorage()\n    }\n\n    handleCheckboxClick (event) {\n        let id = event.currentTarget.closest('.task').id\n        let checked = event.currentTarget.closest('.task').querySelector('.checkbox').checked;\n\n        let arrayToAdd = this.state.completedTasks\n        let arrayToDelete = this.state.toDoTasks\n\n        if (checked) {\n            let index = arrayToDelete.findIndex(item => item.id === id);\n            arrayToAdd.unshift(arrayToDelete[index]) \n            arrayToDelete.splice(index, 1);\n            this.setState({\n                toDoTasks: arrayToDelete,\n                completedTasks: arrayToAdd\n            })\n        } else {\n            // let newCompletedTasks = this.state.completedTasks\n            // let index = newCompletedTasks.findIndex(item => item.id === id);\n            // let newToDoTasks = this.state.toDoTasks\n            // newToDoTasks.unshift(newCompletedTasks[index])\n            // newCompletedTasks.splice(index, 1);\n            // this.setState({\n            //     toDoTasks: newToDoTasks,\n            //     completedTasks: newCompletedTasks\n            // })\n        }\n\n        this.updateLocalStorage()\n    }\n\n    handleInputChange (event) {\n        this.setState({ inputValue: event.currentTarget.value })\n    }\n\n    getToDoItems () {\n        let items = []\n        this.state.toDoTasks.forEach((item) => {\n            let key = `to-do-item-${item.id}`\n            let html = (\n                <div className=\"task\" id={item.id} key={key}>\n                    <div className=\"task-value\">\n                        <input type=\"checkbox\" className=\"checkbox\" onChange={this.handleCheckboxClick}/>\n                        {item.value}\n                    </div>\n                    <div className=\"task-delete\">\n                        <button className=\"delete-button\" onClick={this.handleDeleteClick}>Delete</button>\n                    </div>\n                </div>\n            )\n            items.push(html)\n        })\n        return items\n    }\n\n    getCompletedItems () {\n        let items = []\n        this.state.completedTasks.forEach((item) => {\n            let key = `completed-item-${item.id}`\n            let html = (\n                <div className=\"task\" id={item.id} key={key}>\n                    <div className=\"task-value\">\n                        <input type=\"checkbox\" className=\"checkbox\" checked={true} onChange={this.handleCheckboxClick}/>\n                        {item.value}\n                    </div>\n                    <div className=\"task-delete\">\n                        <button className=\"delete-button\" onClick={this.handleDeleteClick}>Delete</button>\n                    </div>\n                </div>\n            )\n            items.push(html)\n        })\n        return items\n    }\n\n    render () {\n        return (\n            <section className=\"todo\">\n                <div>\n                    <h2 className=\"section-name\">ADD ITEM</h2>\n                    <div className=\"input\">\n                        <input value={this.state.inputValue} type=\"text\" className=\"input-task\" onChange={this.handleInputChange} onKeyPress={this.keyPressed} />\n                        <button className=\"add-task\" onClick={this.handleAddClick}>Add</button>\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"section-name\">TODO</h2>\n                    <div className=\"open-tasks\">\n                        {this.getToDoItems()}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"section-name\">COMPLETED</h2>\n                    <div className=\"completed-tasks\">\n                        {this.getCompletedItems()}\n                    </div>\n                </div>\n            </section>\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}