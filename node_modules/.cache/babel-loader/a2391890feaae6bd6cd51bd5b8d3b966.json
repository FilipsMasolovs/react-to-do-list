{"ast":null,"code":"var _jsxFileName = \"/Users/Konutis/Desktop/Filips/newStart/react-to-do/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ToDoItem from './ToDoItem';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    let data = window.localStorage.toDoData;\n\n    if (data) {\n      data = JSON.parse(data);\n    } else {\n      data = {\n        toDoTasks: [],\n        completedTasks: []\n      };\n      window.localStorage.setItem('toDoData', JSON.stringify(data));\n    }\n\n    this.state = {\n      inputValue: '',\n      toDoTasks: data.toDoTasks,\n      completedTasks: data.completedTasks\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.keyPressed = this.keyPressed.bind(this);\n  }\n\n  updateLocalStorage() {\n    let data = {\n      toDoTasks: this.state.toDoTasks,\n      completedTasks: this.state.completedTasks\n    };\n    window.localStorage.setItem('toDoData', JSON.stringify(data));\n  }\n\n  keyPressed(event) {\n    if (event.key === \"Enter\") {\n      this.handleAddClick();\n    }\n  }\n\n  handleAddClick() {\n    if (this.state.inputValue) {\n      let id = Date.now();\n      let newItem = {\n        id: id.toString(),\n        value: this.state.inputValue\n      };\n      let newToDoTasks = this.state.toDoTasks;\n      newToDoTasks.unshift(newItem);\n      this.setState({\n        inputValue: '',\n        toDoTasks: newToDoTasks\n      });\n    }\n\n    this.updateLocalStorage();\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      inputValue: event.currentTarget.value\n    });\n  }\n\n  getItems(isChecked) {\n    let items = [];\n    let itemArray = isChecked ? this.state.completedTasks : this.state.toDoTasks;\n    itemArray.forEach(item => {\n      items.push(React.createElement(ToDoItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    });\n    return items;\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"ADD ITEM\"), React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.inputValue,\n      type: \"text\",\n      className: \"input-task\",\n      onChange: this.handleInputChange,\n      onKeyPress: this.keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"add-task\",\n      onClick: this.handleAddClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"TODO\"), React.createElement(\"div\", {\n      className: \"open-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.getItems(false))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"COMPLETED\"), React.createElement(\"div\", {\n      className: \"completed-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.getItems(true))));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/Konutis/Desktop/Filips/newStart/react-to-do/src/App.js"],"names":["React","ToDoItem","App","Component","constructor","props","data","window","localStorage","toDoData","JSON","parse","toDoTasks","completedTasks","setItem","stringify","state","inputValue","handleInputChange","bind","handleAddClick","keyPressed","updateLocalStorage","event","key","id","Date","now","newItem","toString","value","newToDoTasks","unshift","setState","currentTarget","getItems","isChecked","items","itemArray","forEach","item","push","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ToDoItem from './ToDoItem'\n\nexport default class App extends React.Component {\n    constructor (props) {\n        super(props)\n\n        let data = window.localStorage.toDoData\n\n        if (data) {\n            data = JSON.parse(data)\n        } else {\n            data = { toDoTasks: [], completedTasks: [] }\n            window.localStorage.setItem('toDoData', JSON.stringify(data))\n        }\n    \n        this.state = {\n            inputValue: '',\n            toDoTasks: data.toDoTasks,\n            completedTasks: data.completedTasks\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleAddClick = this.handleAddClick.bind(this)\n        this.keyPressed = this.keyPressed.bind(this)\n    }\n\n    updateLocalStorage () {\n        let data = {\n            toDoTasks: this.state.toDoTasks,\n            completedTasks: this.state.completedTasks\n        }\n        window.localStorage.setItem('toDoData', JSON.stringify(data))\n    }\n\n    keyPressed(event) {\n        if (event.key === \"Enter\") {\n          this.handleAddClick()\n        }\n    }\n    \n    handleAddClick () {\n        if (this.state.inputValue) {\n            let id = Date.now()\n            let newItem = { id: id.toString(), value: this.state.inputValue }\n            let newToDoTasks = this.state.toDoTasks\n            newToDoTasks.unshift(newItem)\n            this.setState({\n                inputValue: '',\n                toDoTasks: newToDoTasks\n            })\n        }\n\n        this.updateLocalStorage()\n    }\n\n    handleInputChange (event) {\n        this.setState({ inputValue: event.currentTarget.value })\n    }\n\n    getItems (isChecked) {\n        let items = [];\n        let itemArray = isChecked ? this.state.completedTasks : this.state.toDoTasks\n        itemArray.forEach((item) => {\n            items.push(<ToDoItem />)\n        })\n        return items;\n    }\n\n    render () {\n        return (\n            <section className=\"todo\">\n                <div>\n                    <h2 className=\"section-name\">ADD ITEM</h2>\n                    <div className=\"input\">\n                        <input value={this.state.inputValue} type=\"text\" className=\"input-task\" onChange={this.handleInputChange} onKeyPress={this.keyPressed} />\n                        <button className=\"add-task\" onClick={this.handleAddClick}>Add</button>\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"section-name\">TODO</h2>\n                    <div className=\"open-tasks\">\n                        {this.getItems(false)}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"section-name\">COMPLETED</h2>\n                    <div className=\"completed-tasks\">\n                        {this.getItems(true)}\n                    </div>\n                </div>\n            </section>\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}