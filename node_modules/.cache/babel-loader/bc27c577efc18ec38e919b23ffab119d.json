{"ast":null,"code":"var _jsxFileName = \"/Users/Konutis/Desktop/Filips/newStart/react-to-do/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      toDoTasks: [{\n        id: 'asd123',\n        value: 'Get milk'\n      }, {\n        id: 'asd111',\n        value: 'Go Shopping'\n      }],\n      completedTasks: [{\n        id: 'vegetarian',\n        value: 'Pancakes'\n      }]\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleAddClick() {\n    if (this.state.inputValue) {\n      let id = Date.now();\n      let newItem = {\n        id: id.toString(),\n        value: this.state.inputValue\n      };\n      let newToDoTasks = this.state.toDoTasks;\n      newToDoTasks.unshift(newItem);\n      this.setState({\n        inputValue: '',\n        toDoTasks: newToDoTasks\n      });\n    }\n  }\n\n  handleDeleteClick(event) {\n    let id = event.currentTarget.closest('.task').id;\n    let checked = event.currentTarget.closest('.task').querySelector('.checkbox').checked;\n\n    if (checked) {\n      let newToDoTasks = this.state.completedTasks;\n      let index = newToDoTasks.findIndex(item => item.id === id);\n      newToDoTasks.splice(index, 1);\n      this.setState({\n        completedTasks: newToDoTasks\n      });\n    } else {\n      let newToDoTasks = this.state.toDoTasks;\n      let index = newToDoTasks.findIndex(item => item.id === id);\n      newToDoTasks.splice(index, 1);\n      this.setState({\n        toDoTasks: newToDoTasks\n      });\n    }\n  }\n\n  handleCheckboxClick(event) {\n    let id = event.currentTarget.closest('.task').id;\n    let checked = event.currentTarget.closest('.task').querySelector('.checkbox').checked;\n\n    if (checked) {\n      let newToDoTasks = this.state.toDoTasks;\n      let index = newToDoTasks.findIndex(item => item.id === id);\n      let newCompletedTasks = this.state.completedTasks;\n      console.log(index); // newCompletedTasks.unshift(newItem)\n\n      newToDoTasks.splice(index, 1);\n      this.setState({\n        toDoTasks: newToDoTasks,\n        completedTasks: newCompletedTasks\n      });\n    } else {// let newToDoTasks = this.state.completedTasks\n      // let index = newToDoTasks.findIndex(item => item.id === id);\n      // newToDoTasks.splice(index, 1);\n      // this.setState({\n      //     toDoTasks: newToDoTasks\n      // })\n    }\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      inputValue: event.currentTarget.value\n    });\n  }\n\n  getToDoItems() {\n    let items = [];\n    this.state.toDoTasks.forEach(item => {\n      let key = \"to-do-item-\".concat(item.id);\n      let html = React.createElement(\"div\", {\n        className: \"task\",\n        id: item.id,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        onChange: this.handleCheckboxClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), item.value), React.createElement(\"div\", {\n        className: \"task-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"delete-button\",\n        onClick: this.handleDeleteClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Delete\")));\n      items.push(html);\n    });\n    return items;\n  }\n\n  getCompletedItems() {\n    let items = [];\n    this.state.completedTasks.forEach(item => {\n      let key = \"completed-item-\".concat(item.id);\n      let html = React.createElement(\"div\", {\n        className: \"task\",\n        id: item.id,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        checked: true,\n        onChange: this.handleCheckboxClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), item.value), React.createElement(\"div\", {\n        className: \"task-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"delete-button\",\n        onClick: this.handleDeleteClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Delete\")));\n      items.push(html);\n    });\n    return items;\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"ADD ITEM\"), React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.inputValue,\n      type: \"text\",\n      className: \"input-task\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"add-task\",\n      onClick: this.handleAddClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"TODO\"), React.createElement(\"div\", {\n      className: \"open-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.getToDoItems())), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"COMPLETED\"), React.createElement(\"div\", {\n      className: \"completed-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.getCompletedItems())));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/Konutis/Desktop/Filips/newStart/react-to-do/src/App.js"],"names":["React","App","Component","constructor","props","state","inputValue","toDoTasks","id","value","completedTasks","handleInputChange","bind","handleAddClick","handleDeleteClick","handleCheckboxClick","Date","now","newItem","toString","newToDoTasks","unshift","setState","event","currentTarget","closest","checked","querySelector","index","findIndex","item","splice","newCompletedTasks","console","log","getToDoItems","items","forEach","key","html","push","getCompletedItems","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nexport default class App extends React.Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            inputValue: '',\n            toDoTasks: [ { id: 'asd123', value: 'Get milk' }, { id: 'asd111', value: 'Go Shopping' } ],\n            completedTasks: [ { id: 'vegetarian', value: 'Pancakes' } ]\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleAddClick = this.handleAddClick.bind(this)\n        this.handleDeleteClick = this.handleDeleteClick.bind(this)\n        this.handleCheckboxClick = this.handleCheckboxClick.bind(this)\n    }\n\n    handleAddClick () {\n        if (this.state.inputValue) {\n            let id = Date.now()\n            let newItem = { id: id.toString(), value: this.state.inputValue }\n            let newToDoTasks = this.state.toDoTasks\n            newToDoTasks.unshift(newItem)\n            this.setState({\n                inputValue: '',\n                toDoTasks: newToDoTasks\n            })\n        }\n    }\n\n    handleDeleteClick (event) {\n        let id = event.currentTarget.closest('.task').id\n        let checked = event.currentTarget.closest('.task').querySelector('.checkbox').checked;\n\n        if (checked) {\n            let newToDoTasks = this.state.completedTasks\n            let index = newToDoTasks.findIndex(item => item.id === id);\n            newToDoTasks.splice(index, 1);\n\n            this.setState({\n                completedTasks: newToDoTasks\n            })\n        } else {\n            let newToDoTasks = this.state.toDoTasks\n            let index = newToDoTasks.findIndex(item => item.id === id);\n            newToDoTasks.splice(index, 1);\n\n            this.setState({\n                toDoTasks: newToDoTasks\n            })\n        }\n    }\n\n    handleCheckboxClick (event) {\n        let id = event.currentTarget.closest('.task').id\n        let checked = event.currentTarget.closest('.task').querySelector('.checkbox').checked;\n\n        if (checked) {\n            let newToDoTasks = this.state.toDoTasks\n            let index = newToDoTasks.findIndex(item => item.id === id);\n            let newCompletedTasks = this.state.completedTasks\n            console.log(index)\n            // newCompletedTasks.unshift(newItem)\n            \n            \n            newToDoTasks.splice(index, 1);\n            \n\n\n\n            \n\n            this.setState({\n                toDoTasks: newToDoTasks,\n                completedTasks: newCompletedTasks\n            })\n        } else {\n            // let newToDoTasks = this.state.completedTasks\n            // let index = newToDoTasks.findIndex(item => item.id === id);\n            // newToDoTasks.splice(index, 1);\n            \n\n            // this.setState({\n            //     toDoTasks: newToDoTasks\n            // })\n        }\n    }\n\n    handleInputChange (event) {\n        this.setState({ inputValue: event.currentTarget.value })\n    }\n\n    getToDoItems () {\n        let items = []\n        this.state.toDoTasks.forEach((item) => {\n            let key = `to-do-item-${item.id}`\n            let html = (\n                <div className=\"task\" id={item.id} key={key}>\n                    <div className=\"task-value\">\n                        <input type=\"checkbox\" className=\"checkbox\" onChange={this.handleCheckboxClick}/>\n                        {item.value}\n                    </div>\n                    <div className=\"task-delete\">\n                        <button className=\"delete-button\" onClick={this.handleDeleteClick}>Delete</button>\n                    </div>\n                </div>\n            )\n            items.push(html)\n        })\n        return items\n    }\n\n    getCompletedItems () {\n        let items = []\n        this.state.completedTasks.forEach((item) => {\n            let key = `completed-item-${item.id}`\n            let html = (\n                <div className=\"task\" id={item.id} key={key}>\n                    <div className=\"task-value\">\n                        <input type=\"checkbox\" className=\"checkbox\" checked={true} onChange={this.handleCheckboxClick}/>\n                        {item.value}\n                    </div>\n                    <div className=\"task-delete\">\n                        <button className=\"delete-button\" onClick={this.handleDeleteClick}>Delete</button>\n                    </div>\n                </div>\n            )\n            items.push(html)\n        })\n        return items\n    }\n\n\n    render () {\n        return (\n            <section className=\"todo\">\n                <div>\n                    <h2 className=\"section-name\">ADD ITEM</h2>\n                    <div className=\"input\">\n                        <input value={this.state.inputValue} type=\"text\" className=\"input-task\" onChange={this.handleInputChange} />\n                        <button className=\"add-task\" onClick={this.handleAddClick}>Add</button>\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"section-name\">TODO</h2>\n                    <div className=\"open-tasks\">\n                        {this.getToDoItems()}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"section-name\">COMPLETED</h2>\n                    <div className=\"completed-tasks\">\n                        {this.getCompletedItems()}\n                    </div>\n                </div>\n            </section>\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}